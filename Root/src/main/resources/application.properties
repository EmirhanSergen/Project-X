spring.application.name=Root

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (for debugging)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# use create-drop to rebuild the schema on each start
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Schema generation settings
spring.jpa.properties.hibernate.hbm2ddl.schema_generation.drop_source=metadata
spring.jpa.properties.hibernate.hbm2ddl.schema_generation.create_source=metadata

# H2 specific properties
spring.jpa.properties.hibernate.hbm2ddl.halt_on_error=false

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========================================
# KEYCLOAK CONFIGURATION
# ========================================

# Keycloak Server Configuration
keycloak.auth-server-url=http://localhost:9090
keycloak.realm=projectx
keycloak.resource=projectx-app
keycloak.public-client=false
keycloak.confidential-port=0

# Client Secret (Keycloak'tan aldığınız secret'ı buraya yazın)
keycloak.credentials.secret=3XdbrKegs4ylju76c50p07Vb16G5DYd9

# Spring Security OAuth2 Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/projectx
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9090/realms/projectx/protocol/openid-connect/certs

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=projectx-app
spring.security.oauth2.client.registration.keycloak.client-secret=3XdbrKegs4ylju76c50p07Vb16G5DYd9
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/projectx
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Server Configuration
server.port=8080

# Security Configuration
spring.security.oauth2.resourceserver.jwt.audiences=projectx-app
